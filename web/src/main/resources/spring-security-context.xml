<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security-3.2.xsd">

    <!--Must be declared before authentication manager -->
    <global-method-security authentication-manager-ref="authenticationManager" pre-post-annotations="enabled"/>

    <http pattern="/src/main/resources/**" security="none"/>

    <http auto-config="false" use-expressions="true" authentication-manager-ref="authenticationManager"
          entry-point-ref="authenticationEntryPoint">
        <custom-filter position="FORM_LOGIN_FILTER" ref="kamhoopsAuthenticationProcessingFilter"/>

        <!-- Fix for spring security.  SEE: http://forum.springsource.org/showthread.php?100901-redirect-to-favicon-ico -->
        <intercept-url pattern="/favicon.ico" access="permitAll"/>

        <logout invalidate-session="true" logout-success-url="/?logout=true" logout-url="/logout"/>
    </http>


    <beans:bean id="kamhoopsAuthenticationProcessingFilter"
                class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
        <beans:property name="authenticationManager" ref="authenticationManager"/>
        <beans:property name="filterProcessesUrl" value="/j_spring_security_check"/>

        <beans:property name="authenticationSuccessHandler" ref="successHandler"/>
        <beans:property name="authenticationFailureHandler" ref="failureHandler"/>

        <!--If the user/pass was passed in a GET request, deny-->
        <beans:property name="postOnly" value="true"/>
    </beans:bean>

</beans:beans>